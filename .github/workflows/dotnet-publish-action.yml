name: Dotnet Package Publishing

on: workflow_dispatch

jobs:
  DotnetSdkPublish:
    runs-on: ubuntu-latest
    
    env:
      package_directory: find -name "*Standard*" -type d | head -1;
      

    steps:
    - name: Install Jq
      run: sudo apt-get install jq    

    - name: Generate Sdk
      run: curl -v -X POST 'https://www.apimatic.io/api/api-entities/${{ secrets.API_ENTITY_ID }}/code-generations' -H 'Accept:application/json' -H 'Authorization:X-Auth-Key ${{ secrets.APIMATIC_API_KEY }}' -H 'Content-Type:application/x-www-form-urlencoded' --data-urlencode 'Template=CS_NET_STANDARD_LIB' -o generation.json
      
    - name: Parse Generation Json
      id: parse_generation_json
      run: echo '::set-output name=codegenId::'$(jq -r '.id' generation.json)

    - name: Download Sdk
      run: curl -L -X GET "https://www.apimatic.io/api/api-entities/${{ secrets.API_ENTITY_ID }}/code-generations/${{ steps.parse_generation_json.outputs.codegenId }}/generated-sdk" -o dotnet_sdk.zip 

    - name: Unzip Sdk
      run: unzip dotnet_sdk
      
    - name: Enter Project Directory
      run: cd $(${{ env.package_directory }});
      
    - name: Pack package
      run: cd $(${{ env.package_directory }}); dotnet pack -p:PackageId="${{ secrets.PACKAGE_NAME }}" -o output
    
    - name: Push Package
      run: cd $(${{ env.package_directory }}); cd output; dotnet nuget push "$(find -name "*.nupkg";)" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
