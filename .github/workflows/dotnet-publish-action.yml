name: Dotnet Package Publishing

on: workflow_dispatch

jobs:
  DotnetSdkPublish:
    runs-on: ubuntu-latest
    
    env:
      package_directory: find -name "*Standard*" -type d | head -1;
      

    steps:
    - name: Install Jq
      run: sudo apt-get install jq    

    - name: Generate Sdk
      run: curl -v -X POST 'https://www.apimatic.io/api/api-entities/${{ secrets.API_ENTITY_ID }}/code-generations'
           -H 'Accept:application/json' -H 'Authorization:X-Auth-Key ${{ secrets.APIMATIC_API_KEY }}'
           -H 'Content-Type:application/x-www-form-urlencoded' --data-urlencode 'Template=CS_NET_STANDARD_LIB' -o generation.json
      
    - name: Parse Generation Json
      id: parse_generation_json
      run: echo '::set-output name=codegenId::'$(jq -r '.id' generation.json)

    - name: Download Sdk
      run: curl -L -X GET 
           "https://www.apimatic.io/api/api-entities/${{ secrets.API_ENTITY_ID }}/code-generations/${{ steps.parse_generation_json.outputs.codegenId }}/generated-sdk"
           -o dotnet_sdk.zip

    - name: Unzip Sdk
      run: unzip dotnet_sdk
      
    - name: Get Current Version of Package
      run: curl -L -X GET "https://api.nuget.org/v3-flatcontainer/${{ secrets.PACKAGE_NAME }}/index.json" -o version.json
      
    - name: Parse Version Json
      id: current_package_version
      run: if [cat version.json | jq has('error')]
           then echo '::set-output name=packageVersion::'1.0.0
           else echo '::set-output name=packageVersion::'$(jq -r '.versions[-1]' version.json)
           
    - name: Bump Package version
      id: bump_version
      uses: christian-draeger/increment-semantic-version@1.0.2
      with:
        current-version: ${{ steps.current_package_version.outputs.packageVersion }}
        version-fragment: 'bug'
      
    - name: Pack package
      run: dotnet pack $(${{ env.package_directory }}) -p:PackageVersion=${{ steps.bump_version.outputs.next-version }}
           -p:PackageId="${{ secrets.PACKAGE_NAME }}" -o output
    
    - name: Push Package
      run: dotnet nuget push ./output/$(find -name "{{ secrets.PACKAGE_NAME }}*.nupkg" | head -1)
           --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
