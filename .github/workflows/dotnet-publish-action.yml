name: Dotnet Package Publishing

on: workflow_dispatch

jobs:
  DotnetSdkPublish:
    runs-on: ubuntu-latest
    
    env:
      api_key: hePvp4tDl-HP0IBVGI650qHJ0EDCTuGWt49Qcv7yqkwsKpspojKfhSbtkK3eT_xJ
      api_entity_id: 63342ed6951d069cae2a18d9

    steps:
    - name: Install Jq
      run: sudo apt-get install jq    

    - name: Generate Sdk
      run: curl -v -X POST 'https://www.apimatic.io/api/api-entities/${{ env.api_entity_id }}/code-generations' -H 'Accept:application/json' -H 'Authorization:X-Auth-Key ${{ env.api_key }}' -H 'Content-Type:application/x-www-form-urlencoded' --data-urlencode 'Template=CS_NET_STANDARD_LIB' -o generation.json
      
    - name: Apikey
      run: echo $api_key $api_entity_id
      
    - name: Parse Generation Json
      id: parse_generation_json
      run: echo '::set-output name=codegenId::'$(jq -r '.id' generation.json)

    - name: Download Sdk
      run: curl -L -X GET "https://www.apimatic.io/api/api-entities/${{ env.api_entity_id }}/code-generations/${{ steps.parse_generation_json.outputs.codegenId }}/generated-sdk" -o dotnet_sdk.zip 
    
    - name: List files
      run: ls

    - name: Unzip Sdk
      run: unzip dotnet_sdk
      
    - name: List files
      run: ls
      
    - name: Enter Project Directory
      run: find -name "*Standard*" -type d; 
           cd $(find -name "*Standard*" -type d;)
           
    - name: List Files
      run: ls
      
    - name: Pack package
      run: dotnet pack -p:PackageVersion=2.1.0 -p:Authors="mel" -p:PackageId="adadad" -o output

    - name: Enter Package Directory
      run: cd output
    
    - name: List files
      run: ls
      
    - name: Get Package Name
      run: files(*.nupkg)
           echo "$files[0]"
      
    
#     - name: Push Package
#       run: dotnet nuget push "output\APIMATICCalculatorStandard.2.1.0.nupkg" --api-key oy2aysgnik5hyq5zqtyq5k6yfowompuujldipfm7tdwpye --source https://api.nuget.org/v3/index.json
