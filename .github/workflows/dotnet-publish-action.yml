name: Dotnet Package Publishing

on: workflow_dispatch

permissions: read-all

jobs:
  dotnet-sdk-publish:
    runs-on: ubuntu-latest
    
    env:
      api-key: hePvp4tDl-HP0IBVGI650qHJ0EDCTuGWt49Qcv7yqkwsKpspojKfhSbtkK3eT_xJ
      api-entity-id: 63342ed6951d069cae2a18d9

    steps:
    - name: install-jq
      run: sudo apt-get install jq    

    - name: generate-sdk
      run: curl POST "https://www.apimatic.io/api/api-entities/$api-entity-id/code-generations" -H "Accept:application/json" -H "Authorization:X-Auth-Key $api-key" -H "Content-Type:application/x-www-form-urlencoded" --data-urlencode "Template=CS_NET_STANDARD_LIB" -o generation.json
      
#     - id: set_var
#       run: |
#         content=`cat generation.json`
#         content="${content//'%'/'%25'}"
#         content="${content//$'\n'/'%0A'}"
#         content="${content//$'\r'/'%0D'}"
#         echo "::set-output name=packageJson::$content"
        
#     - name : parse-generation-json
#       run: |
#         echo "::set-output name=codegenId::${{fromJson(steps.set_var.outputs.packageJson).id}}"

    - name: Download Sdk
      run: curl -L -X GET "https://www.apimatic.io/api/api-entities/$api-entity-id/code-generations/${{ steps.parse-generation-json.outputs.codegenId }}/generated-sdk" -o sdk.zip 
    
    - name: List files
      run: ls

#     - name: Check zip
#       run: sudo cat generation.json

#     - name: Unzip Sdk
#       run: unzip dotnet-sdk
      
